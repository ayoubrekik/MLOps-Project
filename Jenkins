pipeline {
    agent any  

    environment {
        VENV_DIR = 'venv'  
        TRAIN_PATH = "data/train.csv"
        TEST_PATH = "data/test.csv"
        MODEL_PATH = "model_NN.joblib"
    }

    parameters {
        string(name: 'RUN_STAGE', defaultValue: 'ALL', description: 'Enter stage name to run a single stage or ALL to run everything')
    }

    stages {
        stage('Checkout Code') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Checkout Code' }
            }
            steps {
                git branch: 'main', url:'https://github.com/ayoubrekik/MLOps-Project.git' 
            }
        }
        
        
        stage('Set up Environment') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Set up Environment' }
            }
            steps {
                sh 'python3 -m venv ${VENV_DIR}'
                sh '. ${VENV_DIR}/bin/activate && pip install -r requirements.txt'
            }
        }
	stage('Code Quality Check') {
	    when {
		expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Code Quality Check' }
	    }
	    steps {
		sh '''
		    . ${VENV_DIR}/bin/activate
		    ${VENV_DIR}/bin/black main.py model_pipeline.py
		    ${VENV_DIR}/bin/flake8 --exit-zero main.py model_pipeline.py
		    ${VENV_DIR}/bin/bandit -r main.py model_pipeline.py
		'''
	    }
	}


        stage('Deploy mlflow') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Deploy mlflow' }
            }
            steps {
                sh '. ${VENV_DIR}/bin/activate && mlflow ui --host 0.0.0.0 --port 5001 &'
            }
        }


        stage('Prepare Data') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Prepare Data' }
            }
            steps {
                sh '. ${VENV_DIR}/bin/activate && python3 main.py --prepare'
            }
        }

        stage('Train Model') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Train Model' }
            }
            steps {
                sh '. ${VENV_DIR}/bin/activate && python3 main.py --train'
            }
        }

        stage('Evaluate Model') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Evaluate Model' }
            }
            steps {
                sh '. ${VENV_DIR}/bin/activate && python3 main.py --evaluate'
            }
        }
        stage('Improve Model') {
            when {
                expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Improve Model' }
            }
            steps {
                sh '. ${VENV_DIR}/bin/activate && python3 main.py --improve'
            }
        }
	stage('Release Port 5001') {
	    when {
		expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Release Port 5001' }
	    }
	    steps {
		sh '''
		    # Find the process using port 5001
		    PID=$(lsof -t -i :5001)

		    # If a process is found, kill it
		    if [ -n "$PID" ]; then
		        echo "Killing process using port 5001 (PID: $PID)..."
		        kill -9 $PID
		    else
		        echo "No process found using port 5001."
		    fi
		'''
	    }
	}
	stage('Docker Run') {
	    when {
		expression { params.RUN_STAGE == 'ALL' || params.RUN_STAGE == 'Docker Run' }
	    }
	    steps {
		sh '''
		    . ${VENV_DIR}/bin/activate
		    # Ensure the container doesn't already exist
		    docker stop mlops || true
		    docker rm mlops || true
		    
		    # Now run the Docker container
		    docker run -d -p 5000:5000 -p 5001:5001 --name mlops ayoubrekik/mlops-project:latest
		'''
	    }
	}


    }
}
